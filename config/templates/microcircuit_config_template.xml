<?xml version="1.0" encoding="UTF-8"?>
<jube>

  <parameterset name="file_paths">
    <parameter name="model_path" type="string">MODEL_PATH</parameter> <!-- path where the multi-area model is stored -->
    <parameter name="data_path" type="string">DATA_PATH</parameter> <!-- path where the simulation files are copied and the simulation output is stored -->
  </parameterset>

  <parameterset name="model_parameters">
    <parameter name="net_params">network_params.py</parameter> <!-- default network parameters -->
    <parameter name="network_state" type="string"></parameter> <!-- empty for microcircuit -->
    <parameter name="scale_N" type="float">1.</parameter> <!-- scaling the number of neurons, 1. -> original model -->
    <parameter name="scale_K" type="float">1.</parameter> <!-- scaling the indegree, 1. -> original model -->
    <parameter name="poisson_input">False</parameter> <!-- choose Poisson or DC input -->
    <parameter name="V0_type" separator="," type="text">'optimized'</parameter> <!-- choose default or optimized initial conditions for the membrane potential -->
    <parameter name="synapse_type" separator="," type="text">'static_synapse'</parameter> <!-- type of synapses in the model -->
    <parameter name="sim_params">sim_params.py</parameter> <!-- default simulation parameters -->
    <parameter name="model_time_sim" type="float">1000.</parameter> <!-- biological time to be simulated in ms -->
    <parameter name="model_time_presim">100.</parameter><!-- in ms -->
    <parameter name="rng_seed">55</parameter><!-- rng seed -->
    <parameter name="record_spikes" type="string"></parameter><!-- change to 'spike_detector' for spike recordings -->
    <parameter name="kwds" separator=";" type="string"></parameter><!-- can be used for passing arguments to SetKernelStatus, such as max_buffer_size_spike_data. If no arguments should be passed leave this empty. If something should be passed insert a dictionary, eg: {'max_buffer_size_spike_data': 10} -->
    <parameter name="scaling">${weak_scaling}</parameter> <!-- can be either weak_scaling or strong_scaling -->
  </parameterset>

  <parameterset name="machine_parameters">
    <parameter name="base_vp" type="int">BASE_VP</parameter> <!-- number of virtual processes per node, accepts a list in the format a,b,c,... for generating multiple runs -->
    <parameter name="walltime" type="string">WALLTIME</parameter> <!-- wall time for the job in format hh:mm:ss -->
    <parameter name="num_nodes" type="int">NUM_nodes</parameter> <!-- number of nodes, accepts a list in the format a,b,c,... for generating multiple runs -->
    <parameter name="threads_per_task" type="int">THREADS_PER_TASK</parameter> <!-- number of threads per task, accepts a list in the format a,b,c,... for generating multiple runs -->
    <parameter name="modules">nest-simulator/3.0</parameter> <!-- modules to be loaded before execution -->
    <parameter name="affinity" type="string">--cpu-bind=sockets --distribution=block:cyclic:fcyclic</parameter> <!-- processor affinity/pinning -->
  </parameterset>

</jube>
